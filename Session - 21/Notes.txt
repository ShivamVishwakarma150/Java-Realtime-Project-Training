#############################
02-Mini Project : REPORTS_API
############################

-> In this project we will learn below concepts


1) How to implement dynamic search in project

2) How to generate excel report 

3) How to generate pdf report 


###########
DB Tables
############


TABLE NAME :: ELIGIBILITY_DTLS

ELIG_ID			NUMBER		PRIMARY KEY
NAME			VARCHAR
MOBILE			NUMBAR
EMAIL			VARCHAR
GENDER			CHAR
SSN			    NUMBER
PLAN_NAME		VARCHAR
PLAN_STATUS		VARCHAR
PLAN_START_DATE	DATE
PLAN_END_DATE	DATE
CREATE_DATE		DATE
UPDATE_DATE		DATE
CREATED_BY		VARCHAR
UPDATED_BY 		VARCHAR


#########
Classes 
###########

1) EligibilityDtls.java   (Entity Class)

2) EligibilityDtlsRepo.java (Repository interface)

3) ReportsService.java (Service Interface)

4) ReportsServiceImpl.java  (Service Interface Impl class)

5) ReportsRestController.java  (class)

6) AppProperties.java

7) AppConstants.java

8) SwaggerConfig.java



############
Project Setup
############

1) Create Spring Boot application with below dependencies

		a) starter-web
		b) starter-data-jpa
		c) mysql-connector
		d) project-lombok
		e) devtools
		f) swagger
		g) swagger-ui
		h) apache-poi
		i) open-pdf



		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>4.1.0</version>
		</dependency>

		<dependency>
			<groupId>com.github.librepdf</groupId>
			<artifactId>openpdf</artifactId>
			<version>1.3.8</version>
		</dependency>
		
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.8.0</version>
		</dependency>
		
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.8.0</version>
		</dependency>



2) Configure datasource properties in application.yml file

3) Create Entity class & Repository Interface




1) Entity class 


package com.shivam.entity;

import java.time.LocalDate;

import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import lombok.Data;

@Data
@Entity
@Table(name="ELIGIBILITY_DETAILS")
public class EligibilityDetails {
	
	@Id
	private Integer eligid;
	private String name;
	private Long mobile;
	private String email;
	private Character gender;
	private Long ssn;
	private String planName;
	private String planStatus;
	private LocalDate planStartDate;
	private LocalDate planEndDate;
	private LocalDate createDate;
	private LocalDate updateDate;
	private String createdBy;
	private String updatedBy;
}


2. Repository Interface 

package com.shivam;

import org.springframework.data.repository.CrudRepository;

public interface EligibilityDetailsRepo extends CrudRepository<EligibilityDetailsRepo, Integer> {
    // You can add custom query methods or use the default methods provided by CrudRepository
}


3. Create a Service Interface 









